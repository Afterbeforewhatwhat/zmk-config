/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    
    combos {
        compatible = "zmk,combos";

    tab {
      bindings = <&kp LA(TAB)>;
      key-positions = <0 38>;
      timeout-ms = <50>;
      slow-release;
    };
  };
    
    
    
   keymap {
     compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |            |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | TAB  |  A  |  S  |  D  |  F  |  G  |            |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |            |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                    | GUI | LWR | SPC |            | SPC | SPC  | RSE |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LTAB &kp A &kp S &kp D &kp F &kp G           &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHIFT &kp Z &kp X &kp C &kp V &kp B           &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ENTER
                      &kp LGUI &mo 1 &kp SPACE         &kp SPACE &kp SPACE &mo 2
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |     |  1  |  2  |  3  |     |            |     |     |     |     |     | BKSP |
// |      |     |  4  |  5  |  6  |     |            |     |     |     |     |     |      |
// | CTRL |     |  7  |  8  |  9  |     |            |     |     |     |     |     |      |
//                    |  0  |     | ALT |            |     |     |     |
                        bindings = <
   &trans    &trans  &kp N1  &kp N2  &kp N3  &trans         &trans   &trans   &trans  &trans  &trans &trans
   &trans     &trans  &kp N4  &kp N5  &kp N6  &trans        &trans   &trans   &trans  &trans  &trans &trans
   &kp LCTR  &trans  &kp N7  &kp N8  &kp N9  &trans         &trans   &trans   &trans  &trans  &trans &trans
                              &kp N0  &trans  &LALT         &kp RET  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |            |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |            |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |            |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |            | ENT |     | ALT |
                        bindings = <
   &kp  TAB    &kp EXCL      &kp AT       &kp HASH     &kp DLLR     &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4     &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT   &trans        &trans       &trans       &trans       &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
